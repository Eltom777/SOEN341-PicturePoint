{"version":3,"sources":["Firebase/config/config.js","Login/components/AuthUserContext.js","Firebase/functions/auth.js","Login/components/withAuthentication.js","Layouts/Header.jsx","Routes/routes.js","Firebase/functions/usernameExists.js","Layouts/AuthHeader.jsx","Login/components/PasswordForget.js","Firebase/functions/getUsername.js","Login/components/SignIn.js","Login/components/SignUp.js","Login/Login.jsx","Firebase/functions/getUser.js","Firebase/functions/getPhotos.js","Links/IsFollowing.js","UserProfile/components/ProfileCard.jsx","Layouts/Taskbar.jsx","Links/GetFollowers.js","Links/GetFollowings.js","UserProfile/components/Taskbar Components/Friends.jsx","UserProfile/components/Taskbar Components/Photos.jsx","Firebase/functions/getPhoto.js","Firebase/functions/getComments.js","Firebase/functions/checkLike.js","Firebase/functions/likePhoto.js","Firebase/functions/unlikePhoto.js","Firebase/functions/deletePhoto.js","Firebase/functions/postComment.js","Posts/CommentForm.jsx","Posts/Picture.jsx","Firebase/functions/addPhoto.js","AddPhoto/AddPhoto.jsx","Login/components/PasswordChange.js","Login/components/EmailUpdate.js","Login/components/FullnameUpdate.js","Login/components/BioUpdate.js","Login/components/Account.js","UserProfile/UserProfile.jsx","Layouts/Navigation.jsx","App.jsx","index.js","Firebase/functions/firebase.js"],"names":["module","exports","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","AuthUserContext","React","createContext","doCreateUserWithEmailAndPassword","email","passwordone","n","u","callback","db","doc","get","then","exists","auth","createUserWithEmailAndPassword","resp","collection","set","username","name","creationDate","Date","toISOString","bio","userID","user","uid","catch","error","alert","message","doSignInWithEmailAndPassword","password","signInWithEmailAndPassword","doSignOut","signOut","localStorage","removeItem","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","doEmailUpdate","updateEmail","getItem","update","doNickNameUpdate","nickname","doBioUpdate","newBio","withAuthentication","Component","props","state","authUser","firebase","onAuthStateChanged","setState","this","Provider","value","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","fontFamily","list","width","Header","side","classes","useState","left","toggleDrawer","open","event","type","key","className","AppBar","position","Toolbar","IconButton","edge","color","aria-label","onClick","Drawer","onClose","role","onKeyDown","List","ListItem","button","component","Link","to","ListItemIcon","ListItemText","src","height","Typography","variant","require","search","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","breakpoints","up","searchIcon","padding","pointerEvents","display","alignItems","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","AuthHeader","doesExist","onSubmit","preventDefault","data","window","onSnapshot","snapshot","InputBase","placeholder","input","inputProps","onChange","target","disabled","byPropKey","propertyName","INITIAL_STATE","success","PasswordForgetForm","sessionStorage","setItem","isInvalid","autoFocus","PasswordForgetLink","PasswordForgetPage","align","SignInForm","history","where","querySnapshot","docs","console","log","getUsername","push","TextField","label","id","Button","style","SignInLink","SignInPage","passwordOne","passwordTwo","SignUpForm","SignUpLink","SignUpPage","Login","exact","path","IsFollowing","updateIsFollowing","forEach","following","followed","isFollowing","removeLink","delete","addLink","add","card","marginTop","marginBottom","cardContent","avatar","avatarSize","posBottom","editIcon","followButton","ProfileCard","date","isCurrentUser","Fab","size","Box","Card","Grid","container","item","Avatar","CardContent","gutterBottom","toLocaleString","day","month","year","taskbar","tabs","divider","right","Taskbar","select","setValue","Paper","elevation","Tabs","newValue","indicatorColor","textColor","centered","Tab","Divider","GetFollowers","followers","map","links","ListItemAvatar","primary","GetFollowings","followings","paper","minHeight","overflow","fontSize","Friends","xs","paperImage","flexWrap","image","Photos","photos","photo","CardActionArea","photoID","CardMedia","imageUrl","getPhoto","getComments","orderBy","comments","checkLike","isLiked","storageRef","storage","ref","CommentForm","body","handleSubmit","bind","handleChange","e","newComment","trim","commentOnPost","photo_id","createdAt","length","fullWidth","maxHeight","caption","Picture","deleteButton","match","setPhoto","setComments","params","dayjs","extend","relativeTime","useEffect","fetchPhoto","fetchComments","fetchIsLiked","a","likes","unlikePost","newLike","likePost","empty","batch","commit","err","child","deletePhoto","CardHeader","subheader","action","comment","secondary","fromNow","generateImageName","fileExtension","Math","round","random","toString","callbackRec","acceptedFileTypesArray","split","AddPhoto","handleCaption","SubmitPicture","file","imageExtension","uploadTask","put","on","progress","bytesTransferred","totalBytes","getDownloadURL","addPhoto","isUploaded","handleOnDrop","files","currentFile","myFileItemReader","FileReader","addEventListener","result","myResult","imgSrc","readAsDataURL","justify","preview","sm","direction","dropbox","showAlerts","acceptedFiles","filesLimit","maxFileSize","dropzoneText","showPreviewsInDropzone","withStyles","PasswordChangeForm","EmailUpdateForm","fullname","FullnameUpdateform","BioUpdateform","AccountPage","Consumer","PasswordChange","EmailUpdate","FullnameUpdate","BioUpdate","UserProfile","render","ready","location","pathname","Account","getUserData","getUser","userData","NavigationAuth","NavigationNonAuth","Navigation","muiTheme","createMuiTheme","main","ReactDOM","document","getElementById","firebaseConfig","initializeApp","firestore"],"mappings":"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","file":"static/js/main.ef51bbc7.chunk.js","sourcesContent":["//Firebase config\r\nmodule.exports = {\r\n    apiKey: 'AIzaSyDTSp-jysKsVYkvrlOjAJBqZoU4GsjG-nk',\r\n    authDomain: 'picturepoint-381cf.firebaseapp.com',\r\n    databaseURL: 'https://picturepoint-381cf.firebaseio.com',\r\n    projectId: 'picturepoint-381cf',\r\n    storageBucket: 'picturepoint-381cf.appspot.com',\r\n    messagingSenderId: '370534118114',\r\n    appId: '1:370534118114:web:5025cb108da80915c564bb',\r\n    measurementId: 'G-8LPREMPPKG',\r\n}\r\n","import React from 'react'\r\n\r\nconst AuthUserContext = React.createContext(null)\r\n\r\nexport default AuthUserContext\r\n","import { auth } from './firebase'\r\nimport { db } from './firebase'\r\n\r\n// Sign Up\r\nexport const doCreateUserWithEmailAndPassword = (\r\n    email,\r\n    passwordone,\r\n    n,\r\n    u,\r\n    callback\r\n) => {\r\n    db.doc(`/users/${u}`)\r\n        .get()\r\n        .then((doc) => {\r\n            if (doc.exists) {\r\n                throw 'username already taken'\r\n            } else {\r\n                auth.createUserWithEmailAndPassword(email, passwordone)\r\n                    .then((resp) => {\r\n                        callback(\r\n                            db.collection('users').doc(u).set({\r\n                                username: u,\r\n                                name: n,\r\n                                email: email,\r\n                                creationDate: new Date().toISOString(),\r\n                                bio: 'This is a bio',\r\n                                userID: resp.user.uid,\r\n                            })\r\n                        )\r\n                    })\r\n                    .catch((error) => {\r\n                        alert(error.message)\r\n                        callback(0)\r\n                    })\r\n            }\r\n        })\r\n        .catch((error) => {\r\n            alert(error)\r\n            callback(1)\r\n        })\r\n}\r\n// Sign In\r\nexport const doSignInWithEmailAndPassword = (email, password) =>\r\n    auth.signInWithEmailAndPassword(email, password)\r\n\r\n// Sign Out\r\nexport const doSignOut = () =>\r\n    auth.signOut().then(() => localStorage.removeItem('username'))\r\n\r\n// Password Reset\r\nexport const doPasswordReset = (email) =>\r\n    auth\r\n        .sendPasswordResetEmail(email)\r\n        .then(function () {\r\n            // Password reset email sent.\r\n        })\r\n        .catch(function (error) {\r\n            // Error occurred. Inspect error.code.\r\n        })\r\n\r\n// Password Change\r\nexport const doPasswordUpdate = (password) =>\r\n    auth.currentUser.updatePassword(password)\r\n\r\n//Email Update\r\nexport const doEmailUpdate = (email) =>\r\n    auth.currentUser.updateEmail(email).then(\r\n        db\r\n            .collection('users')\r\n            .doc(localStorage.getItem('username')) //retrieve user name from fb\r\n            .update({\r\n                email: email,\r\n            })\r\n    )\r\n\r\n//Update nick name\r\nexport const doNickNameUpdate = (nickname) =>\r\n    db.collection('users').doc(localStorage.getItem('username')).update({\r\n        name: nickname,\r\n    })\r\n\r\n//Update bio\r\nexport const doBioUpdate = (newBio) =>\r\n    db.collection('users').doc(localStorage.getItem('username')).update({\r\n        bio: newBio,\r\n    })\r\n","import React from 'react'\r\n\r\nimport AuthUserContext from './AuthUserContext'\r\nimport { firebase } from '../../Firebase/index'\r\n\r\nconst withAuthentication = (Component) =>\r\n    class WithAuthentication extends React.Component {\r\n        constructor(props) {\r\n            super(props)\r\n\r\n            this.state = {\r\n                authUser: null,\r\n            }\r\n        }\r\n\r\n        componentDidMount() {\r\n            firebase.auth.onAuthStateChanged((authUser) => {\r\n                authUser\r\n                    ? this.setState(() => ({ authUser }))\r\n                    : this.setState(() => ({ authUser: null }))\r\n            })\r\n        }\r\n\r\n        render() {\r\n            const { authUser } = this.state\r\n            return (\r\n                <AuthUserContext.Provider value={authUser}>\r\n                    <Component />\r\n                </AuthUserContext.Provider>\r\n            )\r\n        }\r\n    }\r\n\r\nexport default withAuthentication\r\n","//React\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport * as routes from '../Routes/routes'\r\n\r\n//Material UI\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport LockOpen from '@material-ui/icons/LockOpen'\r\n\r\n//Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        fontFamily: 'Yu Gothic UI',\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n}))\r\n\r\n//Render\r\nfunction Header() {\r\n    const classes = useStyles()\r\n\r\n    //Left Menu Functionality\r\n    const [state, setState] = React.useState({\r\n        left: false,\r\n    })\r\n\r\n    const toggleDrawer = (side, open) => (event) => {\r\n        if (\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return\r\n        }\r\n\r\n        setState({ ...state, [side]: open })\r\n    }\r\n\r\n    //Menu component\r\n    const sideList = (side) => (\r\n        <div\r\n            className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(side, false)}\r\n            onKeyDown={toggleDrawer(side, false)}\r\n        >\r\n            <List>\r\n                <ListItem button component={Link} to={routes.SIGN_IN}>\r\n                    <ListItemIcon>\r\n                        <LockOpen />\r\n                    </ListItemIcon>\r\n                    <ListItemText>Sign In</ListItemText>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={toggleDrawer('left', true)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Drawer\r\n                        open={state.left}\r\n                        onClose={toggleDrawer('left', false)}\r\n                    >\r\n                        {sideList('left')}\r\n                    </Drawer>\r\n                    <img\r\n                        src=\"https://firebasestorage.googleapis.com/v0/b/picturepoint-381cf.appspot.com/o/Logo.png?alt=media&token=d41e7cc5-9831-4fb3-b4f1-c185e7832fff\"\r\n                        width=\"55\"\r\n                        height=\"35\"\r\n                    />\r\n                    <Typography variant=\"h3\" className={classes.title}>\r\n                        Picture Point\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","//Login\r\nexport const SIGN_UP = '/signup'\r\nexport const SIGN_IN = '/'\r\nexport const PASSWORD_FORGET = '/pw-forget'\r\n\r\n//UserProfile\r\nexport const HOME = '/:username'\r\nexport const ACCOUNT = '/:username/Account'\r\nexport const FRIEND = '/:username/Friends'\r\nexport const ADD_PHOTO = '/:username/Photos/AddPhoto'\r\nexport const PHOTO_ID = '/:username/Photos/:id'\r\n","const { db } = require('./firebase')\r\n\r\n//Search for a valid username\r\nexport const usernameExists = (username, callback) => {\r\n    db.collection('users')\r\n        .doc(username)\r\n        .onSnapshot((snapshot) => {\r\n            if (snapshot.exists) callback(true)\r\n            else callback(false)\r\n        })\r\n}\r\n","//React\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport * as routes from '../Routes/routes'\r\n\r\n//Firebase\r\nimport { auth } from '../Firebase/index'\r\nimport { usernameExists } from '../Firebase/functions/usernameExists'\r\n\r\n//Material UI\r\nimport { fade, makeStyles } from '@material-ui/core/styles'\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport SearchIcon from '@material-ui/icons/Search'\r\nimport Drawer from '@material-ui/core/Drawer'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport AccountBox from '@material-ui/icons/AccountBox'\r\nimport Home from '@material-ui/icons/Home'\r\nimport ExitToApp from '@material-ui/icons/ExitToApp'\r\n\r\n//Style\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        padding: theme.spacing(0, 2),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '20ch',\r\n        },\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        flexGrow: 1,\r\n        fontFamily: 'Yu Gothic UI',\r\n    },\r\n    list: {\r\n        width: 250,\r\n    },\r\n}))\r\n\r\n//Render\r\nfunction AuthHeader() {\r\n    const classes = useStyles()\r\n    var doesExist = false\r\n\r\n    //Search functionality\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        usernameExists(state.username, (data) => {\r\n            if (data) {\r\n                doesExist = true\r\n                window.open(`/${state.username}`, '_self')\r\n            } else {\r\n                doesExist = false\r\n                alert('No results found.')\r\n            }\r\n        })\r\n\r\n        setState({\r\n            username: '',\r\n        })\r\n    }\r\n\r\n    const onChange = (event) => {\r\n        setState({\r\n            [event.target.name]: event.target.value,\r\n        })\r\n    }\r\n\r\n    const isInvalid = () => {\r\n        return doesExist\r\n    }\r\n\r\n    //Left menu functionality\r\n    const [state, setState] = useState({\r\n        left: false,\r\n    })\r\n\r\n    const toggleDrawer = (side, open) => (event) => {\r\n        if (\r\n            event.type === 'keydown' &&\r\n            (event.key === 'Tab' || event.key === 'Shift')\r\n        ) {\r\n            return\r\n        }\r\n\r\n        setState({ ...state, [side]: open })\r\n    }\r\n\r\n    //Menu component\r\n    const sideList = (side) => (\r\n        <div\r\n            className={classes.list}\r\n            role=\"presentation\"\r\n            onClick={toggleDrawer(side, false)}\r\n            onKeyDown={toggleDrawer(side, false)}\r\n        >\r\n            <List>\r\n                <ListItem\r\n                    button\r\n                    component={Link}\r\n                    to={`/${localStorage.getItem('username')}`}\r\n                >\r\n                    <ListItemIcon>\r\n                        <Home />\r\n                    </ListItemIcon>\r\n                    <ListItemText>Home</ListItemText>\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    component={Link}\r\n                    to={`/${localStorage.getItem('username')}/Account`}\r\n                >\r\n                    <ListItemIcon>\r\n                        <AccountBox />\r\n                    </ListItemIcon>\r\n                    <ListItemText>Account</ListItemText>\r\n                </ListItem>\r\n                <ListItem\r\n                    button\r\n                    onClick={auth.doSignOut}\r\n                    component={Link}\r\n                    to={routes.SIGN_IN}\r\n                >\r\n                    <ListItemIcon>\r\n                        <ExitToApp />\r\n                    </ListItemIcon>\r\n                    <ListItemText>Logout</ListItemText>\r\n                </ListItem>\r\n            </List>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton\r\n                        edge=\"start\"\r\n                        className={classes.menuButton}\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={toggleDrawer('left', true)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                    <Drawer\r\n                        open={state.left}\r\n                        onClose={toggleDrawer('left', false)}\r\n                    >\r\n                        {sideList('left')}\r\n                    </Drawer>\r\n                    <img\r\n                        src=\"https://firebasestorage.googleapis.com/v0/b/picturepoint-381cf.appspot.com/o/Logo.png?alt=media&token=d41e7cc5-9831-4fb3-b4f1-c185e7832fff\"\r\n                        width=\"55\"\r\n                        height=\"35\"\r\n                    />\r\n                    <Typography variant=\"h3\" className={classes.title}>\r\n                        Picture Point\r\n                    </Typography>\r\n                    <div className={classes.search}>\r\n                        <div className={classes.searchIcon}>\r\n                            <SearchIcon />\r\n                        </div>\r\n                        <form onSubmit={handleSubmit}>\r\n                            <InputBase\r\n                                name=\"username\"\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                                value={state.username}\r\n                                onChange={onChange}\r\n                                disabled={isInvalid()}\r\n                            />\r\n                        </form>\r\n                    </div>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AuthHeader\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { auth } from '../../Firebase/index'\r\n\r\nconst PasswordForgetPage = () => (\r\n    <div align=\"center\">\r\n        <h1>PasswordForget</h1>\r\n        <PasswordForgetForm />\r\n    </div>\r\n)\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    error: null,\r\n    success: false,\r\n}\r\n\r\nclass PasswordForgetForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { ...INITIAL_STATE }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        const { email } = this.state\r\n\r\n        auth.doPasswordReset(email)\r\n            .then(() => {\r\n                sessionStorage.setItem('email', email)\r\n                this.setState(() => ({ ...INITIAL_STATE, success: true }))\r\n            })\r\n            .catch((error) => {\r\n                this.setState(() => ({ ...INITIAL_STATE }))\r\n                this.setState(byPropKey('error', error))\r\n            })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { email, error, success } = this.state\r\n\r\n        const isInvalid = email === ''\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <input\r\n                    value={this.state.email}\r\n                    onChange={(event) =>\r\n                        this.setState(byPropKey('email', event.target.value))\r\n                    }\r\n                    type=\"email\"\r\n                    placeholder=\"Email Address\"\r\n                    autoFocus\r\n                />\r\n                <button disabled={isInvalid} type=\"submit\">\r\n                    Reset My Password\r\n                </button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n                {success && (\r\n                    <p>\r\n                        Email sent successfully to{' '}\r\n                        {sessionStorage.getItem('email')}\r\n                    </p>\r\n                )}\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst PasswordForgetLink = () => (\r\n    <p>\r\n        <Link to=\"/pw-forget\">Forgot Password?</Link>\r\n    </p>\r\n)\r\n\r\nexport default PasswordForgetPage\r\n\r\nexport { PasswordForgetForm, PasswordForgetLink }\r\n","const { db } = require('./firebase')\r\n\r\n//Fetch user's info with login email\r\nexport const getUsername = (email, callback) => {\r\n    db.collection('users')\r\n        .where('email', '==', email)\r\n        .get()\r\n        .then(function (querySnapshot) {\r\n            callback(querySnapshot.docs[0].data())\r\n        })\r\n        .catch(function (error) {\r\n            console.log('Error: ', error)\r\n        })\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nimport { SignUpLink } from './SignUp'\r\nimport { PasswordForgetLink } from './PasswordForget'\r\nimport { auth } from '../../Firebase/index'\r\nimport * as routes from '../../Routes/routes'\r\nimport './auth.css'\r\nimport { Link } from 'react-router-dom'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { getUsername } from '../../Firebase/functions/getUsername'\r\n\r\nconst SignInPage = ({ history }) => (\r\n    <div align=\"center\" className=\"SignInBox\">\r\n        <h2>SignIn</h2>\r\n        <SignInForm history={history} />\r\n        <PasswordForgetLink />\r\n        <SignUpLink />\r\n    </div>\r\n)\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    password: '',\r\n    error: null,\r\n}\r\n\r\nclass SignInForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { ...INITIAL_STATE }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        const { email, password } = this.state\r\n\r\n        const { history } = this.props\r\n\r\n        auth.doSignInWithEmailAndPassword(email, password)\r\n            .then(() => {\r\n                getUsername(this.state.email, (user) => {\r\n                    this.setState(() => ({ ...INITIAL_STATE }))\r\n                    localStorage.setItem('username', user.username)\r\n                    history.push(`/${user.username}`)\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                this.setState(byPropKey('error', error))\r\n            })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { email, password, error } = this.state\r\n\r\n        const isInvalid = password === '' || email === ''\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <TextField\r\n                    name=\"Email\"\r\n                    label=\"Email\"\r\n                    id=\"standard-secondary\"\r\n                    value={email}\r\n                    onChange={(event) =>\r\n                        this.setState(byPropKey('email', event.target.value))\r\n                    }\r\n                />\r\n                <br />\r\n                <TextField\r\n                    name=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"standard-secondary\"\r\n                    label=\"Password\"\r\n                    color=\"primary\"\r\n                    value={password}\r\n                    onChange={(event) =>\r\n                        this.setState(byPropKey('password', event.target.value))\r\n                    }\r\n                />\r\n\r\n                <br />\r\n                <br />\r\n                <Button\r\n                    type=\"submit\"\r\n                    disabled={isInvalid}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Sign In\r\n                </Button>\r\n                {error && <p style={{ color: 'red' }}>{error.message}</p>}\r\n            </form>\r\n        )\r\n    }\r\n}\r\nconst SignInLink = () => (\r\n    <p>\r\n        Already have an account?\r\n        <br />\r\n        <Link to={routes.SIGN_IN}>Sign In</Link>\r\n    </p>\r\n)\r\n\r\nexport default SignInPage\r\n\r\nexport { SignInForm, SignInLink }\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { auth } from '../../Firebase/index'\r\nimport './auth.css'\r\nimport * as routes from '../../Routes/routes'\r\nimport { SignInLink } from './SignIn'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst SignUpPage = ({ history }) => (\r\n    <div align=\"center\" className=\"SignUpBox\">\r\n        <h1>SignUp</h1>\r\n        <SignUpForm history={history} />\r\n        <SignInLink />\r\n    </div>\r\n)\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    name: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n}\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n})\r\n\r\nclass SignUpForm extends Component {\r\n    state = { ...INITIAL_STATE }\r\n\r\n    onSubmit = (event) => {\r\n        event.preventDefault()\r\n\r\n        const { email, passwordOne, name, username } = this.state\r\n\r\n        auth.doCreateUserWithEmailAndPassword(\r\n            email,\r\n            passwordOne,\r\n            name,\r\n            username,\r\n            (authUser) => {\r\n                if (authUser == 0) {\r\n                    //duplicate email\r\n                    this.setState(() => ({ email: '', error: 'invalid email' }))\r\n                    this.props.history.push(routes.SIGN_UP)\r\n                } else if (authUser == 1) {\r\n                    //duplicate username\r\n                    this.setState(() => ({\r\n                        username: '',\r\n                        error: 'invalid username',\r\n                    }))\r\n                    this.props.history.push(routes.SIGN_UP)\r\n                } else {\r\n                    this.setState(() => ({ ...INITIAL_STATE }))\r\n                    localStorage.setItem('username', username)\r\n                    this.props.history.push(`/${username}`)\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            username,\r\n            name,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n        } = this.state\r\n\r\n        const isInvalid =\r\n            passwordOne !== passwordTwo ||\r\n            passwordOne === '' ||\r\n            email === '' ||\r\n            name === '' ||\r\n            username === ''\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <TextField\r\n                    name=\"Username\"\r\n                    id=\"standard-secondary\"\r\n                    label=\"User name\"\r\n                    color=\"primary\"\r\n                    value={username}\r\n                    onChange={(event) =>\r\n                        this.setState(byPropKey('username', event.target.value))\r\n                    }\r\n                    type=\"text\"\r\n                />\r\n                <br />\r\n                <TextField\r\n                    name=\"name\"\r\n                    value={name}\r\n                    id=\"standard-secondary\"\r\n                    label=\"Full name\"\r\n                    color=\"primary\"\r\n                    onChange={(event) =>\r\n                        this.setState(byPropKey('name', event.target.value))\r\n                    }\r\n                    type=\"text\"\r\n                />\r\n                <br />\r\n                <TextField\r\n                    name=\"email\"\r\n                    value={email}\r\n                    id=\"standard-secondary\"\r\n                    label=\"Email Address\"\r\n                    color=\"primary\"\r\n                    onChange={(event) =>\r\n                        this.setState(byPropKey('email', event.target.value))\r\n                    }\r\n                    type=\"email\"\r\n                />\r\n                <br />\r\n                <TextField\r\n                    name=\"password\"\r\n                    value={passwordOne}\r\n                    id=\"standard-secondary\"\r\n                    label=\"Password\"\r\n                    color=\"primary\"\r\n                    onChange={(event) =>\r\n                        this.setState(\r\n                            byPropKey('passwordOne', event.target.value)\r\n                        )\r\n                    }\r\n                    type=\"password\"\r\n                />\r\n                <br />\r\n                <TextField\r\n                    name=\"ConfirmPassword\"\r\n                    value={passwordTwo}\r\n                    id=\"standard-secondary\"\r\n                    label=\"Comfirm Password\"\r\n                    color=\"primary\"\r\n                    onChange={(event) =>\r\n                        this.setState(\r\n                            byPropKey('passwordTwo', event.target.value)\r\n                        )\r\n                    }\r\n                    type=\"password\"\r\n                />\r\n\r\n                <br />\r\n                <br />\r\n\r\n                <Button\r\n                    type=\"submit\"\r\n                    disabled={isInvalid}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Sign Up\r\n                </Button>\r\n\r\n                {error && <p style={{ color: 'red' }}>{error.message}</p>}\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nconst SignUpLink = () => (\r\n    <p>\r\n        Don't have an account? <Link to={routes.SIGN_UP}>Sign Up</Link>\r\n    </p>\r\n)\r\n\r\nexport default SignUpPage\r\n\r\nexport { SignUpForm, SignUpLink }\r\n","//React\r\nimport React from 'react'\r\nimport { Route } from 'react-router-dom'\r\n\r\n//Routes\r\nimport * as routes from '../Routes/routes'\r\n\r\n//Pages\r\nimport SignUpPage from './components/SignUp'\r\nimport SignInPage from './components/SignIn'\r\nimport PasswordForgetPage from './components/PasswordForget'\r\n\r\nfunction Login() {\r\n    return (\r\n        <div>\r\n            <Route exact path={routes.SIGN_UP} component={SignUpPage} />\r\n            <Route exact path={routes.SIGN_IN} component={SignInPage} />\r\n            <Route\r\n                exact\r\n                path={routes.PASSWORD_FORGET}\r\n                component={PasswordForgetPage}\r\n            />\r\n        </div>\r\n    )\r\n}\r\nexport default Login\r\n","const { db } = require('./firebase')\r\n\r\n//Fetch user's info with username\r\nexport const getUser = (userID, callback) => {\r\n    db.collection('users')\r\n        .doc(userID)\r\n        .onSnapshot((snapshot) => {\r\n            callback(snapshot.data())\r\n        })\r\n}\r\n","const { db } = require('./firebase')\r\n\r\n//Fetch all photos belonging to the user\r\nexport const getPhotos = (username, callback) => {\r\n    db.collection('photos')\r\n        .where('user', '==', username)\r\n        .onSnapshot((snapshot) => {\r\n            let data = []\r\n            snapshot.forEach((doc) => {\r\n                data.push({ ...doc.data(), photoID: doc.id })\r\n            })\r\n            callback(data)\r\n        })\r\n}\r\n","import React from 'react'\r\nimport { db, auth } from '../Firebase/functions/firebase'\r\n\r\nimport { Button } from '@material-ui/core'\r\n\r\nclass IsFollowing extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { isFollowing: false } // initialized state of variable\r\n        console.log(this.props.username)\r\n        this.updateIsFollowing()\r\n    }\r\n\r\n    updateIsFollowing = () => {\r\n        console.log('mounted')\r\n        db.collection('links') // get the collection 'link' in firestore\r\n            .get()\r\n            .then((snapshot) => {\r\n                // go through each link\r\n                snapshot.forEach((doc) => {\r\n                    // search for link if between logged in user is following displayed profile user\r\n                    // if link exists, set state of isFollowing to true to render right button: \"follow\" or \"unfollow\"\r\n                    if (\r\n                        doc.data().following ==\r\n                            localStorage.getItem('username') && // displayed profile user\r\n                        doc.data().followed == this.props.username\r\n                    ) {\r\n                        // logged in user\r\n                        this.setState({\r\n                            isFollowing: true,\r\n                        })\r\n                    }\r\n                })\r\n                console.log(snapshot)\r\n            })\r\n            .catch((error) => console.log(error))\r\n    }\r\n\r\n    // remove a link to the collection 'links' which keeps track of following and followed relations\r\n    // represents the action of \"unfollowing a user\"\r\n    removeLink = () => {\r\n        db.collection('links') // get the collection 'link' in firestore\r\n            .get()\r\n            .then((snapshot) => {\r\n                // go through each link\r\n                snapshot.forEach((doc) => {\r\n                    // search for link if between logged in user is following displayed profile user: remove it\r\n                    if (\r\n                        doc.data().following ==\r\n                            localStorage.getItem('username') && // displayed profile user\r\n                        doc.data().followed == this.props.username\r\n                    ) {\r\n                        // logged in user\r\n\r\n                        let id = doc.id\r\n                        db.collection('links').doc(id).delete()\r\n                    }\r\n                })\r\n                console.log(snapshot)\r\n            })\r\n            .catch((error) => console.log(error))\r\n\r\n        // change the state of isFollowing to false\r\n        // update button from \"unfollow\" to \"follow\"\r\n        this.setState({\r\n            isFollowing: false,\r\n        })\r\n    }\r\n\r\n    // add a link to the collection 'links' which keeps track of following and followed relations\r\n    // represents the action of \"following a user\"\r\n    addLink = () => {\r\n        // append link object to document 'links'\r\n        db.collection('links') // get the collection 'link' in firestore\r\n            .add({\r\n                followed: this.props.username, // logged in user\r\n                following: localStorage.getItem('username'), // displayed profile user\r\n            })\r\n\r\n        // change the state of isFollowing to true\r\n        // update button from \"follow\" to \"unfollow\"\r\n        this.setState({\r\n            isFollowing: true,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let isFollowing = this.state.isFollowing\r\n        let button\r\n        // render a different button depending wether the logged in user already follows or not the displayed profile user\r\n        if (isFollowing) {\r\n            button = (\r\n                <div className=\"UnfollowUser\">\r\n                    <Button\r\n                        onClick={this.removeLink}\r\n                        variant=\"contained\"\r\n                        color=\"secondary.secondary\"\r\n                    >\r\n                        UNFOLLOW\r\n                    </Button>\r\n                </div>\r\n            )\r\n        } else {\r\n            button = (\r\n                <div className=\"FollowUser\">\r\n                    <Button\r\n                        onClick={this.addLink}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        FOLLOW\r\n                    </Button>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return <div>{button}</div>\r\n    }\r\n}\r\n\r\nexport default IsFollowing\r\n","//React\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n//Material UI\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Box from '@material-ui/core/Box'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport Fab from '@material-ui/core/Fab'\r\nimport EditIcon from '@material-ui/icons/Edit'\r\n\r\n//Components\r\nimport IsFollowing from '../../Links/IsFollowing'\r\n\r\n//Style\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        width: 720,\r\n        backgroundColor: 'white',\r\n        padding: 3,\r\n        marginTop: 30,\r\n        marginBottom: 10,\r\n    },\r\n    cardContent: {\r\n        width: 470,\r\n    },\r\n    avatar: {\r\n        marginTop: 30,\r\n        marginRight: 10,\r\n    },\r\n    avatarSize: {\r\n        marginLeft: 3,\r\n        width: '80px',\r\n        height: '80px',\r\n    },\r\n    posBottom: {\r\n        marginTop: 20,\r\n    },\r\n    editIcon: {\r\n        marginTop: 3,\r\n        marginLeft: 52,\r\n    },\r\n    followButton: {\r\n        width: 100,\r\n        marginTop: 2,\r\n    },\r\n})\r\n\r\nfunction ProfileCard(props) {\r\n    const classes = useStyles()\r\n\r\n    //User info\r\n    var user = props.currentUser\r\n    var date = new Date(user.creationDate)\r\n\r\n    //Edit/Follow button\r\n    var button\r\n    if (props.isCurrentUser) {\r\n        button = (\r\n            <Fab\r\n                className={classes.editIcon}\r\n                size=\"small\"\r\n                color=\"secondary\"\r\n                aria-label=\"edit\"\r\n                component={Link}\r\n                to={`/${localStorage.getItem('username')}/Account`}\r\n            >\r\n                <EditIcon />\r\n            </Fab>\r\n        )\r\n    } else {\r\n        button = <IsFollowing username={user.username} />\r\n    }\r\n\r\n    //Renders the profile card\r\n    return (\r\n        <div>\r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n                <Card className={classes.card}>\r\n                    <Grid container>\r\n                        <Grid item className={classes.avatar}>\r\n                            <Avatar className={classes.avatarSize}>\r\n                                {null}\r\n                            </Avatar>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <CardContent className={classes.cardContent}>\r\n                                <Typography variant=\"h3\" color=\"inherit\">\r\n                                    {user.username}\r\n                                </Typography>\r\n                                <Typography variant=\"h5\">\r\n                                    {user.name}\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" gutterBottom>\r\n                                    {user.email}\r\n                                </Typography>\r\n                                <Typography variant=\"body1\" component=\"p\">\r\n                                    {user.bio}\r\n                                </Typography>\r\n                                <Typography\r\n                                    className={classes.posBottom}\r\n                                    variant=\"body2\"\r\n                                    color=\"textSecondary\"\r\n                                >\r\n                                    Member since{' '}\r\n                                    {date.toLocaleString('en-US', {\r\n                                        day: 'numeric',\r\n                                        month: 'long',\r\n                                        year: 'numeric',\r\n                                    })}\r\n                                </Typography>\r\n                            </CardContent>\r\n                        </Grid>\r\n                        <Grid item>{button}</Grid>\r\n                    </Grid>\r\n                </Card>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileCard\r\n","//React\r\nimport React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n//Material UI\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Tabs from '@material-ui/core/Tabs'\r\nimport Tab from '@material-ui/core/Tab'\r\nimport Divider from '@material-ui/core/Divider'\r\n\r\n//Style\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    taskbar: {\r\n        backgroundColor: '#F5F5F5',\r\n    },\r\n    tabs: {\r\n        backgroundColor: 'white',\r\n    },\r\n    divider: {\r\n        width: 1000,\r\n        position: 'absolute',\r\n        left: '23%',\r\n        right: '77%',\r\n    },\r\n})\r\n\r\n//Render\r\nfunction Taskbar(props) {\r\n    const classes = useStyles()\r\n\r\n    //Taskbar state handling\r\n    var select\r\n    if (props.state === 'Friends') select = 0\r\n    else select = 1\r\n\r\n    const [value, setValue] = useState(select)\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Paper className={classes.root} elevation={0}>\r\n                <Tabs\r\n                    className={classes.taskbar}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"primary\"\r\n                    textColor=\"primary\"\r\n                    centered\r\n                >\r\n                    <Tab\r\n                        label=\"My Friends\"\r\n                        component={Link}\r\n                        to={`/${props.username}/Friends`}\r\n                    />\r\n                    <Tab\r\n                        label=\"My Photos\"\r\n                        component={Link}\r\n                        to={`/${props.username}`}\r\n                    />\r\n                </Tabs>\r\n            </Paper>\r\n            <Divider className={classes.divider} variant=\"middle\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Taskbar\r\n","import React, { Fragment } from 'react'\r\nimport { db, auth } from '../Firebase/functions/firebase'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nclass GetFollowers extends React.Component {\r\n    // initialized state of variable\r\n    state = {\r\n        followers: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        // is called when the component GetFollowers is rendered\r\n        console.log('mounted')\r\n        db.collection('links') // get the collection 'link' in firestore\r\n            .onSnapshot((snapshot) => {\r\n                const followers = [] // initialize array to hold following users\r\n                snapshot.forEach((doc) => {\r\n                    // search for link if between logged in user is followed by other users\r\n                    // if found, append to array\r\n                    if (doc.data().followed == this.props.username) {\r\n                        //username of logged in user\r\n                        const data = doc.data() // get data\r\n                        followers.push(data) // push data into array\r\n                    }\r\n                })\r\n                this.setState({ followers: followers }) // set the state of variable\r\n                console.log(snapshot)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.followers &&\r\n                    this.state.followers.map((links) => (\r\n                        <Fragment>\r\n                            <List component=\"nav\">\r\n                                <ListItem\r\n                                    button\r\n                                    component={Link}\r\n                                    to={`/${links.following}`}\r\n                                >\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>{links.following[0]}</Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={links.following} />\r\n                                </ListItem>\r\n                            </List>\r\n                        </Fragment>\r\n                    ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetFollowers\r\n","import React, { Fragment } from 'react'\r\nimport { db, auth } from '../Firebase/functions/firebase'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport Avatar from '@material-ui/core/Avatar'\r\n\r\nclass GetFollowings extends React.Component {\r\n    // initialized state of variable\r\n    state = {\r\n        followings: null,\r\n    }\r\n\r\n    componentDidMount() {\r\n        // is called when the component GetFollowings is rendered\r\n        console.log('mounted')\r\n        db.collection('links') // get the collection 'link' in firestore\r\n            .onSnapshot((snapshot) => {\r\n                const followings = [] // initialize array to hold followed users\r\n                snapshot.forEach((doc) => {\r\n                    // search for link if between logged in user is following other users\r\n                    // if found, append to array\r\n                    if (doc.data().following == this.props.username) {\r\n                        //username of logged in user\r\n                        const data = doc.data() // get data\r\n                        followings.push(data) // push data into array\r\n                    }\r\n                })\r\n                this.setState({ followings: followings }) // set the state of variable\r\n                console.log(snapshot)\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.state.followings &&\r\n                    this.state.followings.map((links) => (\r\n                        <Fragment>\r\n                            <List component=\"nav\">\r\n                                <ListItem\r\n                                    button\r\n                                    component={Link}\r\n                                    to={`/${links.followed}`}\r\n                                >\r\n                                    <ListItemAvatar>\r\n                                        <Avatar>{links.followed[0]}</Avatar>\r\n                                    </ListItemAvatar>\r\n                                    <ListItemText primary={links.followed} />\r\n                                </ListItem>\r\n                            </List>\r\n                        </Fragment>\r\n                    ))}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetFollowings\r\n","//React\r\nimport React from 'react'\r\n\r\n//Material UI\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\n\r\n//Components\r\nimport GetFollowers from '../../../Links/GetFollowers'\r\nimport GetFollowings from '../../../Links/GetFollowings'\r\n\r\n//Style\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        padding: 10,\r\n        marginTop: 20,\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        marginBottom: 20,\r\n        minHeight: 515,\r\n        overflow: 'auto',\r\n    },\r\n    avatarSize: {\r\n        fontSize: '20px',\r\n        width: '40px',\r\n        height: '40px',\r\n    },\r\n})\r\n\r\n//Render\r\nfunction Friends(props) {\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <div>\r\n            <Box>\r\n                <Grid container>\r\n                    <Grid item xs>\r\n                        <Paper className={classes.paper} elevation={3}>\r\n                            <Typography variant=\"h4\" align=\"center\">\r\n                                Followers\r\n                            </Typography>\r\n                            <GetFollowers username={props.username} />\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs>\r\n                        <Paper className={classes.paper} elevation={3}>\r\n                            <Typography variant=\"h4\" align=\"center\">\r\n                                Following\r\n                            </Typography>\r\n                            <GetFollowings username={props.username} />\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friends\r\n","//React\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n//Material UI\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardActionArea from '@material-ui/core/CardActionArea'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport Button from '@material-ui/core/Button'\r\n\r\n//Style\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        padding: 10,\r\n        marginTop: 10,\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        marginBottom: 20,\r\n        minHeight: 500,\r\n        width: 900,\r\n    },\r\n    paperImage: {\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-evenly',\r\n    },\r\n    card: {\r\n        marginTop: 10,\r\n        height: 240,\r\n        width: 240,\r\n    },\r\n    image: {\r\n        height: 240,\r\n        width: 240,\r\n    },\r\n})\r\n\r\n//Render\r\nfunction Photos(props) {\r\n    const classes = useStyles()\r\n\r\n    //Photo info\r\n    var photos = props.photos\r\n\r\n    //Upload photo button\r\n    var button\r\n    if (props.isCurrentUser) {\r\n        button = (\r\n            <Button\r\n                className={classes.followButton}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                component={Link}\r\n                to={`/${props.username}/Photos/AddPhoto`}\r\n            >\r\n                Upload an image\r\n            </Button>\r\n        )\r\n    } else {\r\n        button = null\r\n    }\r\n\r\n    //Render all photos\r\n    return (\r\n        <div>\r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <Grid container>\r\n                        <Grid item xs />\r\n                        <Grid item>{button}</Grid>\r\n                    </Grid>\r\n                    <Paper className={classes.paperImage} elevation={0}>\r\n                        {photos.map((photo) => (\r\n                            <Card className={classes.card}>\r\n                                <CardActionArea\r\n                                    component={Link}\r\n                                    to={`/${props.username}/Photos/${photo.photoID}`}\r\n                                >\r\n                                    <CardMedia\r\n                                        className={classes.image}\r\n                                        image={photo.imageUrl}\r\n                                    />\r\n                                </CardActionArea>\r\n                            </Card>\r\n                        ))}\r\n                    </Paper>\r\n                </Paper>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Photos\r\n","const { db } = require('./firebase')\r\n\r\n//Fetch a single photo\r\nexport const getPhoto = (photoID, callback) => {\r\n    db.collection('photos')\r\n        .doc(photoID)\r\n        .onSnapshot((snapshot) => {\r\n            callback(snapshot.data())\r\n        })\r\n}\r\n","const { db } = require('./firebase')\r\n\r\n//Fetch all the post's comments\r\nexport const getComments = (photoID, callback) => {\r\n    db.collection('comments')\r\n        .orderBy('createdAt', 'desc')\r\n        .where('photo_id', '==', photoID)\r\n        .onSnapshot((snapshot) => {\r\n            let comments = []\r\n            snapshot.forEach((doc) => {\r\n                comments.push({ ...doc.data() })\r\n            })\r\n            callback(comments)\r\n        })\r\n}\r\n","const { db } = require('./firebase')\r\n\r\n//check if a user has already liked a post to determine the colour of the like button\r\nexport const checkLike = (photoID, username, callback) => {\r\n    db.collection('likes')\r\n        .where('photo', '==', photoID)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n            let isLiked = false\r\n            querySnapshot.forEach((doc) => {\r\n                if (doc.data().user === username) {\r\n                    isLiked = true\r\n                }\r\n            })\r\n            callback(isLiked)\r\n        })\r\n        .catch((error) => {\r\n            console.log('Error: ', error)\r\n        })\r\n}\r\n","const { db } = require('./firebase')\r\n\r\n//Like a picture\r\nexport const likePost = (newLike, photoID, photo) => {\r\n    db.collection('likes').add(newLike)\r\n\r\n    db.collection('photos')\r\n        .doc(photoID)\r\n        .update({\r\n            likes: photo.likes + 1,\r\n        })\r\n}\r\n","const { db } = require('./firebase')\r\n\r\n//Unlike a photo\r\nexport const unlikePost = (photoID, username, photo) => {\r\n    db.collection('likes')\r\n        .where('photo', '==', photoID)\r\n        .get()\r\n        .then((querySnapshot) => {\r\n            querySnapshot.forEach((doc) => {\r\n                if (doc.data().user === username)\r\n                    db.collection('likes').doc(doc.id).delete()\r\n            })\r\n        })\r\n        .catch((error) => {\r\n            console.log('Error: ', error)\r\n        })\r\n\r\n    db.collection('photos')\r\n        .doc(photoID)\r\n        .update({\r\n            likes: photo.likes - 1,\r\n        })\r\n}\r\n","//Firebase\r\nimport { db, storage } from './firebase'\r\n\r\nconst storageRef = storage.ref()\r\n\r\nexport const deletePhoto = (photoID, callback) => {\r\n    try {\r\n        // delete photo document\r\n        db.collection('photos').doc(photoID).delete()\r\n\r\n        // delete all comment document related to this picture\r\n        db.collection('comments')\r\n            .where('photo_id', '==', photoID)\r\n            .get()\r\n            .then((snapshot) => {\r\n                if (snapshot.empty) {\r\n                    console.log('No matching comment documents.')\r\n                } else {\r\n                    //start batch\r\n                    let batch = db.batch()\r\n                    snapshot.forEach((doc) => {\r\n                        batch.delete(doc.ref) // can only delete up to 500 documents with one batch\r\n                    })\r\n                    // Commit the batch\r\n                    batch.commit()\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                throw ('Error getting comment documents', err)\r\n            })\r\n\r\n        // delete all likes document related to this picture\r\n        db.collection('likes')\r\n            .where('photo', '==', photoID)\r\n            .get()\r\n            .then((snapshot) => {\r\n                if (snapshot.empty) {\r\n                    console.log('No matching likes documents.')\r\n                } else {\r\n                    //start batch\r\n                    let batch = db.batch()\r\n                    snapshot.forEach((doc) => {\r\n                        batch.delete(doc.ref) // can only delete up to 500 documents with one batch\r\n                    })\r\n                    // Commit the batch\r\n                    batch.commit()\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                throw ('Error getting likes documents', err)\r\n            })\r\n\r\n        //final step, remove picture from google storage\r\n        let desertRef = storageRef.child(photoID)\r\n        desertRef\r\n            .delete()\r\n            .then(() => {\r\n                callback(photoID + ' successfully deleted')\r\n            })\r\n            .catch((err) => {\r\n                //throw an error if file was not deleted successfully\r\n                throw err\r\n            })\r\n    } catch (error) {\r\n        callback(error)\r\n    }\r\n}\r\n","const { db } = require('./firebase')\r\n\r\n// Comment on a Post\r\nexport const commentOnPost = (newComment, callback) => {\r\n    if (newComment.body.trim() === '') {\r\n        console.log('Must not be empty')\r\n        callback(false)\r\n    } else {\r\n        db.collection('comments').add(newComment)\r\n        callback(true)\r\n    }\r\n}\r\n","//React\r\nimport React, { Component } from 'react'\r\n\r\n//Firebase\r\nimport { commentOnPost } from '../Firebase/functions/postComment'\r\n\r\n//Material-UI\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            body: '',\r\n        }\r\n        this.handleSubmit = this.handleSubmit.bind(this)\r\n        this.handleChange = this.handleChange.bind(this)\r\n    }\r\n\r\n    handleSubmit(e) {\r\n        e.preventDefault()\r\n        const newComment = {\r\n            body: this.state.body,\r\n            username: this.props.username,\r\n            photo_id: this.props.photoID,\r\n            createdAt: new Date().toISOString(),\r\n        }\r\n\r\n        commentOnPost(newComment, (data) => {})\r\n\r\n        this.setState({\r\n            body: '',\r\n        })\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({\r\n            [e.target.name]: e.target.value,\r\n        })\r\n    }\r\n\r\n    //500 character limit\r\n    isInvalid() {\r\n        return this.state.body.length > 200 || this.state.body === ''\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <TextField\r\n                        className=\"commentField\"\r\n                        name=\"body\"\r\n                        id=\"outlined-comment\"\r\n                        label=\"Add a comment...\"\r\n                        color=\"primary\"\r\n                        variant=\"outlined\"\r\n                        value={this.state.body}\r\n                        onChange={this.handleChange}\r\n                        fullWidth\r\n                    />\r\n                    <br />\r\n                    <br />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        disabled={this.isInvalid()}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                    >\r\n                        Post\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CommentForm\r\n","//React\r\nimport React, { useState, useEffect, Fragment } from 'react'\r\n\r\n//Relative time (Dayjs)\r\nimport dayjs from 'dayjs'\r\nimport relativeTime from 'dayjs/plugin/relativeTime'\r\n\r\n//Firebase function\r\nimport { getPhoto } from '../Firebase/functions/getPhoto'\r\nimport { getComments } from '../Firebase/functions/getComments'\r\nimport { checkLike } from '../Firebase/functions/checkLike'\r\nimport { likePost } from '../Firebase/functions/likePhoto'\r\nimport { unlikePost } from '../Firebase/functions/unlikePhoto'\r\nimport { deletePhoto } from '../Firebase/functions/deletePhoto'\r\n\r\n//Material UI\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\nimport CardHeader from '@material-ui/core/CardHeader'\r\nimport CardContent from '@material-ui/core/CardContent'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport FavoriteIcon from '@material-ui/icons/Favorite'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Divider from '@material-ui/core/Divider'\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar'\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever'\r\n\r\n//Components\r\nimport CommentForm from './CommentForm'\r\n\r\n//Style\r\nconst useStyles = makeStyles({\r\n    paper: {\r\n        marginTop: 10,\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        marginBottom: 20,\r\n        minHeight: 500,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n    },\r\n    card: {\r\n        backgroundColor: 'white',\r\n        height: 'auto',\r\n        width: 1200,\r\n    },\r\n    cardContent: {\r\n        width: 480,\r\n    },\r\n    comments: {\r\n        marginTop: 5,\r\n        maxHeight: 500,\r\n        overflow: 'auto',\r\n    },\r\n    image: {\r\n        height: 720,\r\n        width: 720,\r\n    },\r\n    caption: {\r\n        marginBottom: 15,\r\n    },\r\n})\r\n\r\nfunction Picture({ match }) {\r\n    const classes = useStyles()\r\n\r\n    const [state, setState] = useState({\r\n        isLiked: false,\r\n    })\r\n    const [photo, setPhoto] = useState({})\r\n    const [comments, setComments] = useState([])\r\n    var photoID = match.params.id\r\n    var username = localStorage.getItem('username')\r\n    var date = new Date(photo.creationDate)\r\n    var button\r\n    var deleteButton\r\n\r\n    //Relative time\r\n    dayjs.extend(relativeTime)\r\n\r\n    //Runs fecthing\r\n    useEffect(() => {\r\n        fetchPhoto()\r\n        fetchComments()\r\n        fetchIsLiked()\r\n    }, [])\r\n\r\n    const fetchPhoto = async () => {\r\n        getPhoto(photoID, (data) => {\r\n            setPhoto(data)\r\n        })\r\n    }\r\n\r\n    const fetchComments = async () => {\r\n        getComments(photoID, (data) => {\r\n            setComments(data)\r\n        })\r\n    }\r\n\r\n    const fetchIsLiked = async () => {\r\n        checkLike(photoID, username, (data) => {\r\n            setState({\r\n                isLiked: data,\r\n            })\r\n        })\r\n    }\r\n\r\n    const unlikePhoto = (e) => {\r\n        e.preventDefault()\r\n        unlikePost(photoID, username, photo)\r\n        setState({\r\n            isLiked: false,\r\n        })\r\n    }\r\n\r\n    const likePhoto = (e) => {\r\n        e.preventDefault()\r\n        const newLike = {\r\n            photo: photoID,\r\n            user: username,\r\n        }\r\n        likePost(newLike, photoID, photo)\r\n        setState({\r\n            isLiked: true,\r\n        })\r\n    }\r\n\r\n    const handleDelete = (e) => {\r\n        e.preventDefault()\r\n        deletePhoto(photoID, (callback) => {\r\n            alert(callback)\r\n        })\r\n        window.open(`/${username}`, '_self')\r\n    }\r\n\r\n    if (state.isLiked) {\r\n        button = (\r\n            <IconButton aria-label=\"unlike\" align=\"left\" onClick={unlikePhoto}>\r\n                <FavoriteIcon color=\"secondary\" />\r\n                <Typography>{photo.likes}</Typography>\r\n            </IconButton>\r\n        )\r\n    } else {\r\n        button = (\r\n            <IconButton aria-label=\"like\" align=\"left\" onClick={likePhoto}>\r\n                <FavoriteIcon color=\"default\" />\r\n                <Typography>{photo.likes}</Typography>\r\n            </IconButton>\r\n        )\r\n    }\r\n\r\n    if (username === match.params.username) {\r\n        deleteButton = (\r\n            <IconButton\r\n                aria-label=\"delete\"\r\n                align=\"right\"\r\n                onClick={handleDelete}\r\n            >\r\n                <DeleteForeverIcon color=\"secondary\" />\r\n            </IconButton>\r\n        )\r\n    } else {\r\n        deleteButton = null\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Box display=\"flex\" justifyContent=\"center\">\r\n                <Paper className={classes.paper}>\r\n                    <Card className={classes.card}>\r\n                        <Grid container>\r\n                            <Grid item>\r\n                                <CardMedia\r\n                                    className={classes.image}\r\n                                    image={photo.imageUrl}\r\n                                />\r\n                                {button}\r\n                            </Grid>\r\n                            <Grid item className={classes.cardContent}>\r\n                                <CardHeader\r\n                                    avatar={<Avatar>{null}</Avatar>}\r\n                                    title={photo.user}\r\n                                    subheader={date.toLocaleString('en-US', {\r\n                                        day: 'numeric',\r\n                                        month: 'long',\r\n                                        year: 'numeric',\r\n                                    })}\r\n                                    action={deleteButton}\r\n                                />\r\n                                <CardContent>\r\n                                    <Typography\r\n                                        className={classes.caption}\r\n                                        variant=\"body1\"\r\n                                        color=\"\"\r\n                                        component=\"p\"\r\n                                        align=\"left\"\r\n                                    >\r\n                                        {photo.caption}\r\n                                    </Typography>\r\n                                    <CommentForm\r\n                                        username={username}\r\n                                        photoID={photoID}\r\n                                    />\r\n                                    <Box className={classes.comments}>\r\n                                        {comments.map((comment) => (\r\n                                            <Fragment>\r\n                                                <List component=\"nav\">\r\n                                                    <ListItem>\r\n                                                        <ListItemAvatar>\r\n                                                            <Avatar />\r\n                                                        </ListItemAvatar>\r\n                                                        <ListItemText\r\n                                                            primary={\r\n                                                                comment.username\r\n                                                            }\r\n                                                            secondary={\r\n                                                                <Fragment>\r\n                                                                    <Typography variant=\"body1\">\r\n                                                                        {\r\n                                                                            comment.body\r\n                                                                        }\r\n                                                                    </Typography>\r\n                                                                    <Typography\r\n                                                                        variant=\"subtitle2\"\r\n                                                                        align=\"right\"\r\n                                                                    >\r\n                                                                        {dayjs(\r\n                                                                            comment.createdAt\r\n                                                                        ).fromNow()}\r\n                                                                    </Typography>\r\n                                                                </Fragment>\r\n                                                            }\r\n                                                        />\r\n                                                    </ListItem>\r\n                                                    <Divider\r\n                                                        variant=\"fullWidth\"\r\n                                                        component=\"li\"\r\n                                                    />\r\n                                                </List>\r\n                                            </Fragment>\r\n                                        ))}\r\n                                    </Box>\r\n                                </CardContent>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Card>\r\n                </Paper>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Picture\r\n","//Firebase\r\nimport { db, storage } from './firebase'\r\n\r\nexport const addPhoto = (file, caption, callback) => {\r\n    let imageExtension = file.name.split('.')[file.name.split('.').length - 1]\r\n    let photoID\r\n\r\n    generateImageName(imageExtension, (callback) => {\r\n        photoID = callback + '.' + imageExtension\r\n    })\r\n\r\n    console.log(photoID)\r\n\r\n    //Upload file to google storage\r\n    var uploadTask = storage.ref().child(photoID).put(file)\r\n    uploadTask.on(\r\n        'state_changed',\r\n        (snapshot) => {\r\n            // Get task progress, including the number of bytes uploaded and the total number of bytes to be uploaded\r\n            let progress =\r\n                (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            console.log('Upload is ' + progress + '% done')\r\n        },\r\n        (error) => {\r\n            // Handle unsuccessful uploads\r\n            console.log('Error', error)\r\n            callback(null)\r\n        },\r\n        () => {\r\n            // Handle successful uploads on complete\r\n            uploadTask.snapshot.ref.getDownloadURL().then((imageUrl) => {\r\n                console.log('File available at', imageUrl)\r\n                db.collection('/photos')\r\n                    .doc(photoID)\r\n                    .set({\r\n                        imageUrl,\r\n                        caption,\r\n                        user: localStorage.getItem('username'),\r\n                        creationDate: new Date().toISOString(),\r\n                        likes: 0,\r\n                    })\r\n                callback(photoID)\r\n            })\r\n        }\r\n    )\r\n}\r\n\r\nconst generateImageName = (fileExtension, callback) => {\r\n    //Checks if Image name already exists in DB\r\n    callback(Math.round(Math.random() * 1000000000000).toString())\r\n\r\n    db.collection('photos')\r\n        .doc(callback + '.' + fileExtension)\r\n        .get()\r\n        .then((doc) => {\r\n            if (doc.exists) {\r\n                console.log('Image already exists, generating a new image name')\r\n                generateImageName(fileExtension, (callbackRec) => {\r\n                    callback(callbackRec)\r\n                })\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n            console.log('Error: ', error)\r\n        })\r\n}\r\n","//React Components\r\nimport React, { Component } from 'react'\r\nimport { DropzoneArea } from 'material-ui-dropzone'\r\nimport PropTypes from 'prop-types'\r\n\r\n//Firebase Function\r\nimport { addPhoto } from '../Firebase/functions/addPhoto'\r\n\r\n//Material UI Components\r\nimport Box from '@material-ui/core/Box'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { withStyles } from '@material-ui/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Card from '@material-ui/core/Card'\r\nimport CardMedia from '@material-ui/core/CardMedia'\r\n\r\nconst acceptedFileTypes = 'image/x-png, image/png, image/jpg, image/jpeg'\r\nconst imageMaxSize = 2000000 //bytes\r\nconst acceptedFileTypesArray = acceptedFileTypes.split(',').map((item) => {\r\n    return item.trim()\r\n})\r\n\r\nconst styles = () => ({\r\n    paper: {\r\n        padding: 10,\r\n        marginTop: 20,\r\n        marginLeft: 20,\r\n        marginRight: 20,\r\n        marginBottom: 20,\r\n        height: 500,\r\n        width: 850,\r\n        backgroundColor: 'whitesmoke',\r\n    },\r\n    paperImage: {\r\n        marginTop: 10,\r\n        display: 'flex',\r\n        flexWrap: 'wrap',\r\n        justifyContent: 'space-evenly',\r\n    },\r\n    card: {\r\n        height: 360,\r\n        width: 360,\r\n    },\r\n    image: {\r\n        height: 360,\r\n        width: 360,\r\n    },\r\n    preview: {\r\n        height: 400,\r\n        width: 400,\r\n    },\r\n})\r\n\r\nclass AddPhoto extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            imgSrc: null,\r\n            caption: '',\r\n            file: null,\r\n            isUploaded: null,\r\n            error: null,\r\n        }\r\n    }\r\n\r\n    handleCaption = (e) => {\r\n        //console.log(e.target.value);\r\n        this.setState({ caption: e.target.value })\r\n    }\r\n\r\n    SubmitPicture = (event) => {\r\n        event.preventDefault()\r\n\r\n        //console.log(this.state.file);\r\n\r\n        addPhoto(this.state.file, this.state.caption, (callback) => {\r\n            if (callback != null) {\r\n                this.setState({ isUploaded: callback })\r\n            } else {\r\n                this.setState({\r\n                    error: 'Internal server error ! Check console',\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    handleOnDrop = (files) => {\r\n        // imageBase64Data\r\n        //console.log(files[0]);\r\n        const currentFile = files[0]\r\n        const myFileItemReader = new FileReader() //Parse the image\r\n        myFileItemReader.addEventListener(\r\n            'load',\r\n            () => {\r\n                console.log(myFileItemReader.result)\r\n                const myResult = myFileItemReader.result\r\n                this.setState({\r\n                    imgSrc: myResult,\r\n                    file: currentFile,\r\n                })\r\n            },\r\n            false\r\n        )\r\n\r\n        myFileItemReader.readAsDataURL(currentFile)\r\n    }\r\n\r\n    render() {\r\n        const { imgSrc, file, isUploaded, error } = this.state\r\n        const { classes } = this.props\r\n        var isInvalid = file == null\r\n\r\n        return (\r\n            <div>\r\n                <Box display=\"flex\" justifyContent=\"center\">\r\n                    <Paper className={classes.paper} elevation={3}>\r\n                        <Grid container className={'marginTop: 10'} xs={10}>\r\n                            <Typography variant=\"h6\" color=\"inherit\">\r\n                                Preview:\r\n                            </Typography>\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            className={'marginTop: inherit'}\r\n                            justify=\"center\"\r\n                            spacing={5}\r\n                        >\r\n                            <Grid\r\n                                item\r\n                                className={classes.preview}\r\n                                xs={10}\r\n                                sm={5}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                            >\r\n                                {imgSrc != null ? (\r\n                                    <div>\r\n                                        <Card className={classes.card}>\r\n                                            <CardMedia\r\n                                                className={classes.image}\r\n                                                image={imgSrc}\r\n                                                title={this.state.caption}\r\n                                            />\r\n                                        </Card>\r\n                                    </div>\r\n                                ) : (\r\n                                    ''\r\n                                )}\r\n                            </Grid>\r\n                            <Grid\r\n                                item\r\n                                xs={12}\r\n                                sm={6}\r\n                                direction=\"column\"\r\n                                justify=\"center\"\r\n                            >\r\n                                <DropzoneArea\r\n                                    className={classes.dropbox}\r\n                                    onChange={this.handleOnDrop}\r\n                                    showAlerts={false}\r\n                                    acceptedFiles={acceptedFileTypesArray}\r\n                                    filesLimit={1}\r\n                                    maxFileSize={imageMaxSize}\r\n                                    dropzoneText=\"Drag'n'Drop an Image or Click !\"\r\n                                    showPreviewsInDropzone={false}\r\n                                />\r\n                                <Grid container item justify=\"center\">\r\n                                    <TextField\r\n                                        id=\"Caption\"\r\n                                        label=\"Caption\"\r\n                                        onChange={this.handleCaption}\r\n                                    />\r\n                                </Grid>\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                item\r\n                                xs={12}\r\n                                spacing={5}\r\n                                justify=\"center\"\r\n                            >\r\n                                {isUploaded != null ? (\r\n                                    <p\r\n                                        style={{ color: 'green' }}\r\n                                    >{`\"${file.name}\" was successfully uploaded`}</p>\r\n                                ) : (\r\n                                    ''\r\n                                )}\r\n                                {error != null ? (\r\n                                    <p style={{ color: 'red' }}>{error}</p>\r\n                                ) : (\r\n                                    ''\r\n                                )}\r\n                            </Grid>\r\n                            <Grid\r\n                                container\r\n                                item\r\n                                className={'marginTop: 10'}\r\n                                xs={12}\r\n                                spacing={5}\r\n                                justify=\"center\"\r\n                            >\r\n                                <Button\r\n                                    disabled={isInvalid}\r\n                                    variant=\"contained\"\r\n                                    color=\"primary\"\r\n                                    onClick={this.SubmitPicture}\r\n                                >\r\n                                    Upload\r\n                                </Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Box>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nAddPhoto.propTypes = {\r\n    classes: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default withStyles(styles)(AddPhoto)\r\n","import React, { Component } from 'react'\r\n\r\nimport { auth } from '../../Firebase/index'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n}\r\n\r\nclass PasswordChangeForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { ...INITIAL_STATE }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        const { passwordOne } = this.state\r\n\r\n        auth.doPasswordUpdate(passwordOne)\r\n            .then(() => {\r\n                this.setState(() => ({ ...INITIAL_STATE }))\r\n            })\r\n            .catch((error) => {\r\n                this.setState(byPropKey('error', error))\r\n            })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { passwordOne, passwordTwo, error } = this.state\r\n\r\n        const isInvalid = passwordOne !== passwordTwo || passwordOne === ''\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <TextField\r\n                    name=\"PasswordOne\"\r\n                    value={passwordOne}\r\n                    id=\"standard-secondary\"\r\n                    label=\"New Password\"\r\n                    color=\"primary\"\r\n                    onChange={(event) =>\r\n                        this.setState(\r\n                            byPropKey('passwordOne', event.target.value)\r\n                        )\r\n                    }\r\n                    type=\"password\"\r\n                />\r\n                <br />\r\n                <br />\r\n                <TextField\r\n                    name=\"PasswordTwo\"\r\n                    value={passwordTwo}\r\n                    id=\"standard-secondary\"\r\n                    label=\"Confirm Password\"\r\n                    color=\"primary\"\r\n                    onChange={(event) =>\r\n                        this.setState(\r\n                            byPropKey('passwordTwo', event.target.value)\r\n                        )\r\n                    }\r\n                    type=\"password\"\r\n                />\r\n                <br />\r\n                <br />\r\n                <Button\r\n                    type=\"submit\"\r\n                    disabled={isInvalid}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Update Password\r\n                </Button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PasswordChangeForm\r\n","import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { doEmailUpdate } from '../../Firebase/functions/auth'\r\n\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n    email: '',\r\n    error: null,\r\n}\r\n\r\nclass EmailUpdateForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { ...INITIAL_STATE }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        const { email } = this.state\r\n\r\n        doEmailUpdate(email)\r\n            .then(() => {\r\n                this.setState(() => ({ ...INITIAL_STATE }))\r\n            })\r\n            .catch((error) => {\r\n                this.setState(byPropKey('error', error))\r\n            })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { email, error } = this.state\r\n        const isInvalid = email === ''\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <TextField\r\n                    name=\"Email\"\r\n                    value={email}\r\n                    id=\"standard-secondary\"\r\n                    label=\"New email\"\r\n                    color=\"primary\"\r\n                    onChange={(event) =>\r\n                        this.setState(byPropKey('email', event.target.value))\r\n                    }\r\n                />\r\n                <br />\r\n                <Button\r\n                    type=\"submit\"\r\n                    disabled={isInvalid}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Update my Email\r\n                </Button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EmailUpdateForm\r\n","import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { doNickNameUpdate } from '../../Firebase/functions/auth'\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n    fullname: '',\r\n    error: null,\r\n}\r\n\r\nclass FullnameUpdateform extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { ...INITIAL_STATE }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        const { fullname } = this.state\r\n\r\n        doNickNameUpdate(fullname)\r\n            .then(() => {\r\n                this.setState(() => ({ ...INITIAL_STATE }))\r\n            })\r\n            .catch((error) => {\r\n                this.setState(byPropKey('error', error))\r\n            })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { fullname, error } = this.state\r\n\r\n        const isInvalid = fullname === ''\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <TextField\r\n                    name=\"Fullname\"\r\n                    value={fullname}\r\n                    id=\"standard-secondary\"\r\n                    label=\"New Nick Name\"\r\n                    color=\"primary\"\r\n                    onChange={(event) =>\r\n                        this.setState(byPropKey('fullname', event.target.value))\r\n                    }\r\n                />\r\n                <br />\r\n                <Button\r\n                    type=\"submit\"\r\n                    disabled={isInvalid}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Update Nick Name\r\n                </Button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FullnameUpdateform\r\n","import React, { Component } from 'react'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { doBioUpdate } from '../../Firebase/functions/auth'\r\nconst byPropKey = (propertyName, value) => () => ({\r\n    [propertyName]: value,\r\n})\r\n\r\nconst INITIAL_STATE = {\r\n    bio: '',\r\n    error: null,\r\n}\r\n\r\nclass BioUpdateform extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { ...INITIAL_STATE }\r\n    }\r\n\r\n    onSubmit = (event) => {\r\n        const { bio } = this.state\r\n\r\n        doBioUpdate(bio)\r\n            .then(() => {\r\n                this.setState(() => ({ ...INITIAL_STATE }))\r\n            })\r\n            .catch((error) => {\r\n                this.setState(byPropKey('error', error))\r\n            })\r\n\r\n        event.preventDefault()\r\n    }\r\n\r\n    render() {\r\n        const { bio, error } = this.state\r\n\r\n        const isInvalid = bio === ''\r\n\r\n        return (\r\n            <form onSubmit={this.onSubmit}>\r\n                <TextField\r\n                    name=\"Bio\"\r\n                    value={bio}\r\n                    id=\"standard-secondary\"\r\n                    label=\"New Bio\"\r\n                    color=\"primary\"\r\n                    onChange={(event) =>\r\n                        this.setState(byPropKey('bio', event.target.value))\r\n                    }\r\n                />\r\n                <br />\r\n                <Button\r\n                    type=\"submit\"\r\n                    disabled={isInvalid}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                >\r\n                    Update Bio\r\n                </Button>\r\n\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BioUpdateform\r\n","import React from 'react'\r\n\r\nimport AuthUserContext from './AuthUserContext'\r\nimport PasswordChangeForm from './PasswordChange'\r\nimport EmailUpdateForm from './EmailUpdate'\r\nimport FullnameUpdateForm from './FullnameUpdate'\r\nimport BioUpdateform from './BioUpdate'\r\n\r\nconst AccountPage = () => (\r\n    <AuthUserContext.Consumer>\r\n        {(authUser) => (\r\n            <div align=\"center\">\r\n                <h1>Account: {authUser.email}</h1>\r\n                <PasswordChangeForm />\r\n                <br />\r\n                <EmailUpdateForm />\r\n                <br />\r\n                <FullnameUpdateForm />\r\n                <br />\r\n                <BioUpdateform />\r\n            </div>\r\n        )}\r\n    </AuthUserContext.Consumer>\r\n)\r\n\r\nexport default AccountPage\r\n","//React\r\nimport React, { Component } from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\n\r\n//Firebase functions\r\nimport { getUser } from '../Firebase/functions/getUser'\r\nimport { getPhotos } from '../Firebase/functions/getPhotos'\r\n\r\n//Routes\r\nimport * as routes from '../Routes/routes'\r\n\r\n//Components\r\nimport ProfileCard from './components/ProfileCard'\r\nimport Taskbar from '../Layouts/Taskbar'\r\nimport Friends from './components/Taskbar Components/Friends'\r\nimport Photos from './components/Taskbar Components/Photos'\r\nimport Picture from '../Posts/Picture'\r\nimport AddPhoto from '../AddPhoto/AddPhoto'\r\nimport Account from '../Login/components/Account'\r\n\r\nexport default class UserProfile extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = { ready: false }\r\n\r\n        //Load first time\r\n        this.getUserData()\r\n    }\r\n\r\n    //Update when data changes\r\n    componentDidUpdate() {\r\n        //If statement prevents re-fetching\r\n        if (this.props.match.params.username !== this.state.username) {\r\n            this.getUserData()\r\n        }\r\n    }\r\n\r\n    //Fetch user data\r\n    getUserData() {\r\n        getUser(this.props.match.params.username, (userData) => {\r\n            getPhotos(this.props.match.params.username, (data) => {\r\n                this.setState({ ...userData, photos: data, ready: true })\r\n            })\r\n        })\r\n    }\r\n\r\n    //Render\r\n    render = function () {\r\n        if (this.state.ready === false) return <div></div>\r\n\r\n        //Current URL location\r\n        var location = window.location.pathname.split('/')\r\n\r\n        //Render main page/Route to all other pages\r\n        return (\r\n            <div>\r\n                <ProfileCard\r\n                    currentUser={this.state}\r\n                    isCurrentUser={\r\n                        localStorage.getItem('username') === this.state.username\r\n                    }\r\n                />\r\n                <Taskbar\r\n                    state={location[location.length - 1]}\r\n                    username={this.state.username}\r\n                />\r\n                <Switch>\r\n                    <Route exact path={routes.ACCOUNT} component={Account} />\r\n                    <Route\r\n                        exact\r\n                        path={routes.FRIEND}\r\n                        render={() => (\r\n                            <Friends username={this.state.username} />\r\n                        )}\r\n                    />\r\n                    <Route\r\n                        exact\r\n                        path={routes.HOME}\r\n                        render={() => (\r\n                            <Photos\r\n                                photos={this.state.photos}\r\n                                username={this.state.username}\r\n                                isCurrentUser={\r\n                                    localStorage.getItem('username') ===\r\n                                    this.state.username\r\n                                }\r\n                            />\r\n                        )}\r\n                    />\r\n                    <Route exact path={routes.ADD_PHOTO} component={AddPhoto} />\r\n                    <Route exact path={routes.PHOTO_ID} component={Picture} />\r\n                </Switch>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","//React\r\nimport React from 'react'\r\nimport { Route } from 'react-router-dom'\r\n\r\n//Authentication\r\nimport AuthUserContext from '../Login/components/AuthUserContext'\r\n\r\n//Layouts\r\nimport Header from '../Layouts/Header'\r\nimport AuthHeader from '../Layouts/AuthHeader'\r\n\r\n//Pages\r\nimport Login from '../Login/Login'\r\nimport UserProfile from '../UserProfile/UserProfile'\r\n\r\n//Routes\r\nimport * as routes from '../Routes/routes'\r\n\r\n//Determines if user is logged in (authenticated)\r\nconst Navigation = () => {\r\n    return (\r\n        <AuthUserContext.Consumer>\r\n            {(authUser) =>\r\n                authUser ? <NavigationAuth /> : <NavigationNonAuth />\r\n            }\r\n        </AuthUserContext.Consumer>\r\n    )\r\n}\r\n\r\n//Authenticated loads user profile\r\nconst NavigationAuth = () => (\r\n    <div>\r\n        <AuthHeader />\r\n        <Route path={routes.HOME} component={UserProfile} />\r\n    </div>\r\n)\r\n\r\n//Non authenticated loads sign-in\r\nconst NavigationNonAuth = () => (\r\n    <div>\r\n        <Header />\r\n        <Route path={routes.SIGN_IN} component={Login} />\r\n    </div>\r\n)\r\n\r\nexport default Navigation\r\n","//React\r\nimport React from 'react'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\n//Components\r\nimport withAuthentication from './Login/components/withAuthentication'\r\nimport Navigation from './Layouts/Navigation'\r\n\r\n//Material UI\r\nimport { createMuiTheme, MuiThemeProvider } from '@material-ui/core/styles'\r\n\r\n//App theme\r\nconst muiTheme = createMuiTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#2a66e7',\r\n        },\r\n        secondary: {\r\n            main: '#ff1744',\r\n            secondary: '#D3D3D3',\r\n        },\r\n    },\r\n})\r\n\r\nconst App = () => (\r\n    <MuiThemeProvider theme={muiTheme}>\r\n        <Router>\r\n            <div className=\"App\">\r\n                <Navigation />\r\n            </div>\r\n        </Router>\r\n    </MuiThemeProvider>\r\n)\r\n\r\nexport default withAuthentication(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './styles.css'\r\nimport App from './App'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n","//Import firebase\r\nimport 'firebase/storage'\r\nconst firebase = require('firebase')\r\nconst firebaseConfig = require('../config/config')\r\n\r\n//Initialize firebase\r\nfirebase.initializeApp(firebaseConfig)\r\nconst auth = firebase.auth()\r\nconst db = firebase.firestore()\r\nconst storage = firebase.storage()\r\n\r\nexport { auth, db, storage }\r\n"],"sourceRoot":""}